// // ===== –£–õ–£–ß–®–ï–ù–ù–ê–Ø –õ–û–ì–ò–ö–ê –û–ë–ù–û–í–õ–ï–ù–ò–Ø –°–¢–ê–¢–£–°–ê =====
//
// let statusCheckInterval = null;
// let isCurrentUser = true; // –§–ª–∞–≥: —Å–º–æ—Ç—Ä–∏–º –ª–∏ –º—ã –Ω–∞ —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å
// let currentUserId = null; // ID —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
// let viewedUserId = null;  // ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–≥–æ —Å–º–æ—Ç—Ä–∏–º
//
// /**
//  * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è - –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
//  */
// function initializeStatusContext() {
//     // –ü–æ–ª—É—á–∞–µ–º ID –∏–∑ –∞—Ç—Ä–∏–±—É—Ç–æ–≤ body (–≤–∞—à–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞)
//     const bodyElement = document.body;
//
//     if (bodyElement) {
//         currentUserId = parseInt(bodyElement.dataset.currentUserId);
//         viewedUserId = parseInt(bodyElement.dataset.profileUserId);
//     }
//
//     // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —Å–º–æ—Ç—Ä–∏–º –ª–∏ –º—ã –Ω–∞ —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å
//     isCurrentUser = viewedUserId === currentUserId;
//
//     console.log('üîç –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç—É—Å–∞:', {
//         currentUserId,
//         viewedUserId,
//         isCurrentUser: isCurrentUser ? '–¥–∞ (—Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å)' : '–Ω–µ—Ç (—á—É–∂–æ–π –ø—Ä–æ—Ñ–∏–ª—å)'
//     });
// }
//
// /**
//  * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å (–£–õ–£–ß–®–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø)
//  */
// async function checkAndUpdateStatus() {
//     try {
//         let response;
//
//         if (isCurrentUser) {
//             // –ï—Å–ª–∏ —ç—Ç–æ –Ω–∞—à –ø—Ä–æ—Ñ–∏–ª—å - –ø–æ–ª—É—á–∞–µ–º —Å–≤–æ–π —Å—Ç–∞—Ç—É—Å
//             response = await fetch('/api/users/me/status');
//         } else {
//             // –ï—Å–ª–∏ —ç—Ç–æ —á—É–∂–æ–π –ø—Ä–æ—Ñ–∏–ª—å - –ø–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
//             response = await fetch(`/api/users/${viewedUserId}/status`);
//         }
//
//         if (response.ok) {
//             const data = await response.json();
//             console.log('üìä –°—Ç–∞—Ç—É—Å –ø–æ–ª—É—á–µ–Ω:', data);
//
//             // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
//             updateStatusDisplay(data.isOnline, data.lastSeen);
//         } else {
//             console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å:', response.status);
//         }
//     } catch (error) {
//         console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞:', error);
//     }
// }
//
// /**
//  * –û–±–Ω–æ–≤–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Å —É—á–µ—Ç–æ–º –≤—Ä–µ–º–µ–Ω–∏
//  */
// function updateStatusDisplay(isOnline, lastSeen) {
//     // –°–∫—Ä—ã–≤–∞–µ–º —Å–µ—Ä–≤–µ—Ä–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã
//     hideElement('server-status-online');
//     hideElement('server-status-recently');
//     hideElement('server-status-offline');
//
//     // –°–∫—Ä—ã–≤–∞–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ —Å—Ç–∞—Ç—É—Å—ã
//     hideElement('dynamic-status-online');
//     hideElement('dynamic-status-offline');
//     hideElement('dynamic-status-recently');
//
//     if (isOnline) {
//         showElement('dynamic-status-online');
//         console.log('‚úÖ –û—Ç–æ–±—Ä–∞–∂–µ–Ω —Å—Ç–∞—Ç—É—Å: –û–ù–õ–ê–ô–ù');
//     } else {
//         // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–æ–≥–¥–∞ –±—ã–ª –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑ –æ–Ω–ª–∞–π–Ω
//         if (lastSeen) {
//             const lastSeenDate = new Date(lastSeen);
//             const now = new Date();
//             const minutesAgo = (now - lastSeenDate) / (1000 * 60);
//
//             if (minutesAgo < 15) {
//                 // –ù–µ–¥–∞–≤–Ω–æ –±—ã–ª –æ–Ω–ª–∞–π–Ω
//                 showElement('dynamic-status-recently');
//                 updateRecentlySeenTime(lastSeenDate);
//                 console.log('üïê –û—Ç–æ–±—Ä–∞–∂–µ–Ω —Å—Ç–∞—Ç—É—Å: –ù–ï–î–ê–í–ù–û –û–ù–õ–ê–ô–ù');
//             } else {
//                 // –î–∞–≤–Ω–æ –Ω–µ –±—ã–ª –æ–Ω–ª–∞–π–Ω
//                 showElement('dynamic-status-offline');
//                 updateOfflineTime(lastSeenDate);
//                 console.log('üì¥ –û—Ç–æ–±—Ä–∞–∂–µ–Ω —Å—Ç–∞—Ç—É—Å: –û–§–õ–ê–ô–ù');
//             }
//         } else {
//             showElement('dynamic-status-offline');
//             console.log('üì¥ –û—Ç–æ–±—Ä–∞–∂–µ–Ω —Å—Ç–∞—Ç—É—Å: –û–§–õ–ê–ô–ù (–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö)');
//         }
//     }
// }
//
// /**
//  * –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–Ω–ª–∞–π–Ω –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å (–¢–û–õ–¨–ö–û –î–õ–Ø –°–ï–ë–Ø)
//  */
// async function setUserOnlineAndUpdate() {
//     // –í–ê–ñ–ù–û: –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–Ω–ª–∞–π–Ω –¢–û–õ–¨–ö–û –¥–ª—è —Å–µ–±—è!
//     if (!isCurrentUser) {
//         console.log('‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ–Ω–ª–∞–π–Ω - —ç—Ç–æ –Ω–µ –Ω–∞—à –ø—Ä–æ—Ñ–∏–ª—å');
//         return;
//     }
//
//     try {
//         // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–Ω–ª–∞–π–Ω
//         const response = await fetch('/api/users/me/online', {
//             method: 'POST',
//             headers: {'Content-Type': 'application/json'}
//         });
//
//         if (response.ok) {
//             console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –æ–Ω–ª–∞–π–Ω');
//
//             // –°–†–ê–ó–£ –æ–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±–µ–∑ –∑–∞–¥–µ—Ä–∂–∫–∏
//             updateStatusDisplay(true, new Date().toISOString());
//
//             // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É
//             setTimeout(() => {
//                 checkAndUpdateStatus();
//             }, 200);
//         }
//     } catch (error) {
//         console.error('‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ–Ω–ª–∞–π–Ω:', error);
//     }
// }
//
// /**
//  * –ó–∞–ø—É—Å—Ç–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å—Ç–∞—Ç—É—Å–∞ (–£–ú–ù–´–ô)
//  */
// function startStatusMonitoring() {
//     // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
//     initializeStatusContext();
//
//     if (isCurrentUser) {
//         // –ï—Å–ª–∏ —ç—Ç–æ –Ω–∞—à –ø—Ä–æ—Ñ–∏–ª—å - —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ–±—è –æ–Ω–ª–∞–π–Ω
//         setUserOnlineAndUpdate();
//
//         // –ß–∞—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è (–∫–∞–∂–¥—ã–µ 15 —Å–µ–∫—É–Ω–¥)
//         statusCheckInterval = setInterval(checkAndUpdateStatus, 15000);
//         console.log('‚è∞ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–ø—É—â–µ–Ω');
//     } else {
//         // –ï—Å–ª–∏ —ç—Ç–æ —á—É–∂–æ–π –ø—Ä–æ—Ñ–∏–ª—å - –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
//         checkAndUpdateStatus();
//
//         // –†–µ–¥–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è —á—É–∂–∏—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π (–∫–∞–∂–¥—ã–µ 60 —Å–µ–∫—É–Ω–¥)
//         statusCheckInterval = setInterval(checkAndUpdateStatus, 60000);
//         console.log('‚è∞ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —á—É–∂–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–ø—É—â–µ–Ω');
//     }
// }
//
// /**
//  * –ü–æ–∫–∞–∑–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç
//  */
// function showElement(id) {
//     const element = document.getElementById(id);
//     if (element) {
//         element.style.display = 'flex';
//     }
// }
//
// /**
//  * –°–∫—Ä—ã—Ç—å —ç–ª–µ–º–µ–Ω—Ç
//  */
// function hideElement(id) {
//     const element = document.getElementById(id);
//     if (element) {
//         element.style.display = 'none';
//     }
// }
//
// /**
//  * –û–±–Ω–æ–≤–∏—Ç—å –≤—Ä–µ–º—è –¥–ª—è "–Ω–µ–¥–∞–≤–Ω–æ –æ–Ω–ª–∞–π–Ω"
//  */
// function updateRecentlySeenTime(lastSeenDate) {
//     const timeElement = document.querySelector('#dynamic-status-recently .status-sub');
//     if (timeElement) {
//         const time = lastSeenDate.toLocaleTimeString('ru-RU', {
//             hour: '2-digit',
//             minute: '2-digit'
//         });
//         timeElement.textContent = `–±—ã–ª –≤ ${time}`;
//     }
// }
//
// /**
//  * –û–±–Ω–æ–≤–∏—Ç—å –≤—Ä–µ–º—è –¥–ª—è "–¥–∞–≤–Ω–æ –æ—Ñ–ª–∞–π–Ω"
//  */
// function updateOfflineTime(lastSeenDate) {
//     const timeElement = document.querySelector('#dynamic-status-offline .status-sub');
//     if (timeElement) {
//         const now = new Date();
//         const diffInDays = Math.floor((now - lastSeenDate) / (1000 * 60 * 60 * 24));
//
//         if (diffInDays === 0) {
//             const time = lastSeenDate.toLocaleTimeString('ru-RU', {
//                 hour: '2-digit',
//                 minute: '2-digit'
//             });
//             timeElement.textContent = `–±—ã–ª —Å–µ–≥–æ–¥–Ω—è –≤ ${time}`;
//         } else if (diffInDays === 1) {
//             timeElement.textContent = '–±—ã–ª –≤—á–µ—Ä–∞';
//         } else if (diffInDays < 7) {
//             timeElement.textContent = `–±—ã–ª ${diffInDays} –¥–Ω. –Ω–∞–∑–∞–¥`;
//         } else {
//             timeElement.textContent = '–¥–∞–≤–Ω–æ –Ω–µ –±—ã–ª –≤ —Å–µ—Ç–∏';
//         }
//     }
// }
//
// /**
//  * –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
//  */
// function stopStatusMonitoring() {
//     if (statusCheckInterval) {
//         clearInterval(statusCheckInterval);
//         statusCheckInterval = null;
//         console.log('‚èπÔ∏è –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å—Ç–∞—Ç—É—Å–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
//     }
// }
//
// // ===== –°–û–ë–´–¢–ò–Ø =====
//
// // –ó–∞–ø—É—Å–∫ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
// document.addEventListener('DOMContentLoaded', function() {
//     console.log('üöÄ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞, –∑–∞–ø—É—Å–∫–∞–µ–º —É–º–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å—Ç–∞—Ç—É—Å–∞...');
//
//     // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
//     setTimeout(startStatusMonitoring, 500);
// });
//
// // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Ñ–ª–∞–π–Ω –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ (–¢–û–õ–¨–ö–û –¥–ª—è —Å–µ–±—è)
// window.addEventListener('beforeunload', function() {
//     if (isCurrentUser) {
//         navigator.sendBeacon('/api/users/me/offline');
//     }
// });
//
// // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–∏ –Ω–∞ –≤–∫–ª–∞–¥–∫—É (–¢–û–õ–¨–ö–û –¥–ª—è —Å–µ–±—è)
// document.addEventListener('visibilitychange', function() {
//     if (!document.hidden && isCurrentUser) {
//         console.log('üëÅÔ∏è –í–∫–ª–∞–¥–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞, –æ–±–Ω–æ–≤–ª—è–µ–º —Å–≤–æ–π —Å—Ç–∞—Ç—É—Å...');
//         setUserOnlineAndUpdate();
//     } else if (!document.hidden && !isCurrentUser) {
//         console.log('üëÅÔ∏è –í–∫–ª–∞–¥–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞, –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—É–∂–æ–π —Å—Ç–∞—Ç—É—Å...');
//         checkAndUpdateStatus();
//     }
// });
//
//
// // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π ping –∫–∞–∂–¥—ã–µ 60 —Å–µ–∫—É–Ω–¥ (–¢–û–õ–¨–ö–û –¥–ª—è —Å–µ–±—è)
// setInterval(function() {
//     if (isCurrentUser) {
//         fetch('/api/users/me/ping', {method: 'POST'})
//             .catch(error => console.warn('‚ö†Ô∏è Ping failed:', error));
//     }
// }, 60000);
//
// console.log('üì± –£–º–Ω—ã–π —Å–∫—Ä–∏–ø—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–º –ø–æ–¥–∫–ª—é—á–µ–Ω');


// ===== –£–õ–£–ß–®–ï–ù–ù–ê–Ø –õ–û–ì–ò–ö–ê –û–ë–ù–û–í–õ–ï–ù–ò–Ø –°–¢–ê–¢–£–°–ê =====

let statusCheckInterval = null;
let isCurrentUser = true; // –§–ª–∞–≥: —Å–º–æ—Ç—Ä–∏–º –ª–∏ –º—ã –Ω–∞ —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å
let currentUserId = null; // ID —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
let viewedUserId = null;  // ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–≥–æ —Å–º–æ—Ç—Ä–∏–º

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è - –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
 */
function initializeStatusContext() {
    // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: window.appData, –∑–∞—Ç–µ–º data-–∞—Ç—Ä–∏–±—É—Ç—ã
    if (window.appData) {
        console.log('üîç –ò—Å–ø–æ–ª—å–∑—É–µ–º window.appData:', window.appData);
        currentUserId = parseUserIdSafely(window.appData.currentUserId);
        viewedUserId = parseUserIdSafely(window.appData.profileUserId);
    } else {
        // Fallback –∫ data-–∞—Ç—Ä–∏–±—É—Ç–∞–º
        const bodyElement = document.body;
        if (bodyElement) {
            const currentUserIdRaw = bodyElement.dataset.currentUserId;
            const viewedUserIdRaw = bodyElement.dataset.profileUserId;

            console.log('üîç –°—ã—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ data-–∞—Ç—Ä–∏–±—É—Ç–æ–≤:', {
                currentUserIdRaw,
                viewedUserIdRaw
            });

            // –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ —á–∏—Å–ª–∞
            currentUserId = parseUserIdSafely(currentUserIdRaw);
            viewedUserId = parseUserIdSafely(viewedUserIdRaw);
        }
    }

    // –ï—Å–ª–∏ viewedUserId –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º currentUserId
    if (!viewedUserId && currentUserId) {
        viewedUserId = currentUserId;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å ID
    if (!isValidUserId(currentUserId)) {
        console.error('‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π currentUserId:', currentUserId);
        return false;
    }

    if (!isValidUserId(viewedUserId)) {
        console.error('‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π viewedUserId:', viewedUserId);
        return false;
    }

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —Å–º–æ—Ç—Ä–∏–º –ª–∏ –º—ã –Ω–∞ —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å
    isCurrentUser = viewedUserId === currentUserId;

    console.log('üîç –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç—É—Å–∞:', {
        currentUserId,
        viewedUserId,
        isCurrentUser: isCurrentUser ? '–¥–∞ (—Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å)' : '–Ω–µ—Ç (—á—É–∂–æ–π –ø—Ä–æ—Ñ–∏–ª—å)'
    });

    return true; // –£—Å–ø–µ—à–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
}

/**
 * –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –≤ userId
 */
function parseUserIdSafely(value) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ "–ø—É—Å—Ç—ã–µ" –∑–Ω–∞—á–µ–Ω–∏—è
    if (!value ||
        value === 'undefined' ||
        value === 'null' ||
        value === '' ||
        value === '0') {
        return null;
    }

    const parsed = parseInt(value, 10);

    if (isNaN(parsed) || parsed <= 0) {
        console.warn('‚ö†Ô∏è –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ userId:', value, 'parsed:', parsed);
        return null;
    }

    return parsed;
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ userId
 */
function isValidUserId(userId) {
    return userId !== null && userId !== undefined && !isNaN(userId) && userId > 0;
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å (–£–õ–£–ß–®–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø)
 */
async function checkAndUpdateStatus() {
    // –î–û–ë–ê–í–õ–ï–ù–ê –ü–†–û–í–ï–†–ö–ê: –ù–µ –≤—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å—ã —Å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ ID
    if (!isValidUserId(currentUserId) || !isValidUserId(viewedUserId)) {
        console.error('‚ùå –ü—Ä–æ–ø—É—Å–∫ –∑–∞–ø—Ä–æ—Å–∞ —Å—Ç–∞—Ç—É—Å–∞ - –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ ID:', {
            currentUserId,
            viewedUserId
        });
        return;
    }

    try {
        let response;

        if (isCurrentUser) {
            // –ï—Å–ª–∏ —ç—Ç–æ –Ω–∞—à –ø—Ä–æ—Ñ–∏–ª—å - –ø–æ–ª—É—á–∞–µ–º —Å–≤–æ–π —Å—Ç–∞—Ç—É—Å
            response = await fetch('/api/users/me/status');
        } else {
            // –ï—Å–ª–∏ —ç—Ç–æ —á—É–∂–æ–π –ø—Ä–æ—Ñ–∏–ª—å - –ø–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            response = await fetch(`/api/users/${viewedUserId}/status`);
        }

        if (response.ok) {
            const data = await response.json();
            console.log('üìä –°—Ç–∞—Ç—É—Å –ø–æ–ª—É—á–µ–Ω:', data);

            // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            updateStatusDisplay(data.isOnline, data.lastSeen);
        } else {
            console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å:', response.status);
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞:', error);
    }
}

/**
 * –û–±–Ω–æ–≤–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Å —É—á–µ—Ç–æ–º –≤—Ä–µ–º–µ–Ω–∏
 */
function updateStatusDisplay(isOnline, lastSeen) {
    // –°–∫—Ä—ã–≤–∞–µ–º —Å–µ—Ä–≤–µ—Ä–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã
    hideElement('server-status-online');
    hideElement('server-status-recently');
    hideElement('server-status-offline');

    // –°–∫—Ä—ã–≤–∞–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ —Å—Ç–∞—Ç—É—Å—ã
    hideElement('dynamic-status-online');
    hideElement('dynamic-status-offline');
    hideElement('dynamic-status-recently');

    if (isOnline) {
        showElement('dynamic-status-online');
        console.log('‚úÖ –û—Ç–æ–±—Ä–∞–∂–µ–Ω —Å—Ç–∞—Ç—É—Å: –û–ù–õ–ê–ô–ù');
    } else {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–æ–≥–¥–∞ –±—ã–ª –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑ –æ–Ω–ª–∞–π–Ω
        if (lastSeen) {
            const lastSeenDate = new Date(lastSeen);
            const now = new Date();
            const minutesAgo = (now - lastSeenDate) / (1000 * 60);

            if (minutesAgo < 15) {
                // –ù–µ–¥–∞–≤–Ω–æ –±—ã–ª –æ–Ω–ª–∞–π–Ω
                showElement('dynamic-status-recently');
                updateRecentlySeenTime(lastSeenDate);
                console.log('üïê –û—Ç–æ–±—Ä–∞–∂–µ–Ω —Å—Ç–∞—Ç—É—Å: –ù–ï–î–ê–í–ù–û –û–ù–õ–ê–ô–ù');
            } else {
                // –î–∞–≤–Ω–æ –Ω–µ –±—ã–ª –æ–Ω–ª–∞–π–Ω
                showElement('dynamic-status-offline');
                updateOfflineTime(lastSeenDate);
                console.log('üì¥ –û—Ç–æ–±—Ä–∞–∂–µ–Ω —Å—Ç–∞—Ç—É—Å: –û–§–õ–ê–ô–ù');
            }
        } else {
            showElement('dynamic-status-offline');
            console.log('üì¥ –û—Ç–æ–±—Ä–∞–∂–µ–Ω —Å—Ç–∞—Ç—É—Å: –û–§–õ–ê–ô–ù (–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö)');
        }
    }
}

/**
 * –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–Ω–ª–∞–π–Ω –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å (–¢–û–õ–¨–ö–û –î–õ–Ø –°–ï–ë–Ø)
 */
async function setUserOnlineAndUpdate() {
    // –í–ê–ñ–ù–û: –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–Ω–ª–∞–π–Ω –¢–û–õ–¨–ö–û –¥–ª—è —Å–µ–±—è!
    if (!isCurrentUser) {
        console.log('‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ–Ω–ª–∞–π–Ω - —ç—Ç–æ –Ω–µ –Ω–∞—à –ø—Ä–æ—Ñ–∏–ª—å');
        return;
    }

    // –î–û–ë–ê–í–õ–ï–ù–ê –ü–†–û–í–ï–†–ö–ê: –í–∞–ª–∏–¥–Ω–æ—Å—Ç—å currentUserId
    if (!isValidUserId(currentUserId)) {
        console.error('‚ùå –ü—Ä–æ–ø—É—Å–∫ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ–Ω–ª–∞–π–Ω - –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π currentUserId:', currentUserId);
        return;
    }

    try {
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–Ω–ª–∞–π–Ω
        const response = await fetch('/api/users/me/online', {
            method: 'POST',
            headers: {'Content-Type': 'application/json'}
        });

        if (response.ok) {
            console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –æ–Ω–ª–∞–π–Ω');

            // –°–†–ê–ó–£ –æ–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±–µ–∑ –∑–∞–¥–µ—Ä–∂–∫–∏
            updateStatusDisplay(true, new Date().toISOString());

            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É
            setTimeout(() => {
                checkAndUpdateStatus();
            }, 200);
        } else {
            console.error('‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ–Ω–ª–∞–π–Ω:', response.status);
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ–Ω–ª–∞–π–Ω:', error);
    }
}

/**
 * –ó–∞–ø—É—Å—Ç–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å—Ç–∞—Ç—É—Å–∞ (–£–ú–ù–´–ô)
 */
function startStatusMonitoring() {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
    const initSuccess = initializeStatusContext();

    if (!initSuccess) {
        console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç—É—Å–∞. –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–µ –∑–∞–ø—É—â–µ–Ω.');
        return;
    }

    if (isCurrentUser) {
        // –ï—Å–ª–∏ —ç—Ç–æ –Ω–∞—à –ø—Ä–æ—Ñ–∏–ª—å - —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ–±—è –æ–Ω–ª–∞–π–Ω
        setUserOnlineAndUpdate();

        // –ß–∞—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è (–∫–∞–∂–¥—ã–µ 15 —Å–µ–∫—É–Ω–¥)
        statusCheckInterval = setInterval(checkAndUpdateStatus, 15000);
        console.log('‚è∞ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–ø—É—â–µ–Ω');
    } else {
        // –ï—Å–ª–∏ —ç—Ç–æ —á—É–∂–æ–π –ø—Ä–æ—Ñ–∏–ª—å - –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
        checkAndUpdateStatus();

        // –†–µ–¥–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è —á—É–∂–∏—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π (–∫–∞–∂–¥—ã–µ 60 —Å–µ–∫—É–Ω–¥)
        statusCheckInterval = setInterval(checkAndUpdateStatus, 60000);
        console.log('‚è∞ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —á—É–∂–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–ø—É—â–µ–Ω');
    }
}

/**
 * –ü–æ–∫–∞–∑–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç
 */
function showElement(id) {
    const element = document.getElementById(id);
    if (element) {
        element.style.display = 'flex';
    }
}

/**
 * –°–∫—Ä—ã—Ç—å —ç–ª–µ–º–µ–Ω—Ç
 */
function hideElement(id) {
    const element = document.getElementById(id);
    if (element) {
        element.style.display = 'none';
    }
}

/**
 * –û–±–Ω–æ–≤–∏—Ç—å –≤—Ä–µ–º—è –¥–ª—è "–Ω–µ–¥–∞–≤–Ω–æ –æ–Ω–ª–∞–π–Ω"
 */
function updateRecentlySeenTime(lastSeenDate) {
    const timeElement = document.querySelector('#dynamic-status-recently .status-sub');
    if (timeElement) {
        const time = lastSeenDate.toLocaleTimeString('ru-RU', {
            hour: '2-digit',
            minute: '2-digit'
        });
        timeElement.textContent = `–±—ã–ª –≤ ${time}`;
    }
}

/**
 * –û–±–Ω–æ–≤–∏—Ç—å –≤—Ä–µ–º—è –¥–ª—è "–¥–∞–≤–Ω–æ –æ—Ñ–ª–∞–π–Ω"
 */
function updateOfflineTime(lastSeenDate) {
    const timeElement = document.querySelector('#dynamic-status-offline .status-sub');
    if (timeElement) {
        const now = new Date();
        const diffInDays = Math.floor((now - lastSeenDate) / (1000 * 60 * 60 * 24));

        if (diffInDays === 0) {
            const time = lastSeenDate.toLocaleTimeString('ru-RU', {
                hour: '2-digit',
                minute: '2-digit'
            });
            timeElement.textContent = `–±—ã–ª —Å–µ–≥–æ–¥–Ω—è –≤ ${time}`;
        } else if (diffInDays === 1) {
            timeElement.textContent = '–±—ã–ª –≤—á–µ—Ä–∞';
        } else if (diffInDays < 7) {
            timeElement.textContent = `–±—ã–ª ${diffInDays} –¥–Ω. –Ω–∞–∑–∞–¥`;
        } else {
            timeElement.textContent = '–¥–∞–≤–Ω–æ –Ω–µ –±—ã–ª –≤ —Å–µ—Ç–∏';
        }
    }
}

/**
 * –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
 */
function stopStatusMonitoring() {
    if (statusCheckInterval) {
        clearInterval(statusCheckInterval);
        statusCheckInterval = null;
        console.log('‚èπÔ∏è –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å—Ç–∞—Ç—É—Å–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    }
}

// ===== –°–û–ë–´–¢–ò–Ø =====

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    console.log('üöÄ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞, –∑–∞–ø—É—Å–∫–∞–µ–º —É–º–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å—Ç–∞—Ç—É—Å–∞...');

    // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
    setTimeout(startStatusMonitoring, 500);
});

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Ñ–ª–∞–π–Ω –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ (–¢–û–õ–¨–ö–û –¥–ª—è —Å–µ–±—è)
window.addEventListener('beforeunload', function() {
    if (isCurrentUser && isValidUserId(currentUserId)) {
        navigator.sendBeacon('/api/users/me/offline');
    }
});

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–∏ –Ω–∞ –≤–∫–ª–∞–¥–∫—É (–¢–û–õ–¨–ö–û –¥–ª—è —Å–µ–±—è)
document.addEventListener('visibilitychange', function() {
    if (!document.hidden && isCurrentUser && isValidUserId(currentUserId)) {
        console.log('üëÅÔ∏è –í–∫–ª–∞–¥–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞, –æ–±–Ω–æ–≤–ª—è–µ–º —Å–≤–æ–π —Å—Ç–∞—Ç—É—Å...');
        setUserOnlineAndUpdate();
    } else if (!document.hidden && !isCurrentUser && isValidUserId(viewedUserId)) {
        console.log('üëÅÔ∏è –í–∫–ª–∞–¥–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞, –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—É–∂–æ–π —Å—Ç–∞—Ç—É—Å...');
        checkAndUpdateStatus();
    }
});

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π ping –∫–∞–∂–¥—ã–µ 60 —Å–µ–∫—É–Ω–¥ (–¢–û–õ–¨–ö–û –¥–ª—è —Å–µ–±—è)
setInterval(function() {
    if (isCurrentUser && isValidUserId(currentUserId)) {
        fetch('/api/users/me/ping', {method: 'POST'})
            .catch(error => console.warn('‚ö†Ô∏è Ping failed:', error));
    }
}, 60000);

console.log('üì± –£–º–Ω—ã–π —Å–∫—Ä–∏–ø—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–º –ø–æ–¥–∫–ª—é—á–µ–Ω');