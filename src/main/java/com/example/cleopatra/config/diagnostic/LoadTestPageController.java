package com.example.cleopatra.config.diagnostic;

import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;


@Controller
@RequestMapping("/diagnostic")
@Slf4j
public class LoadTestPageController {


    @GetMapping("/load-test")
    public String loadTestPage(Model model) {

        // –î–æ–±–∞–≤–ª—è–µ–º –±–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        model.addAttribute("pageTitle", "–ù–∞–≥—Ä—É–∑–æ—á–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ - Cleopatra");
        model.addAttribute("appName", "Cleopatra");
        model.addAttribute("version", "1.0.0");

        model.addAttribute("defaultUrl", "https://cleopatra-brcc.onrender.com/profile/4");
        model.addAttribute("defaultUserId", 4);
        model.addAttribute("defaultRequests", 50);
        model.addAttribute("defaultConcurrency", 10);

        return "diagnostic/load-test";
    }

    @GetMapping("/load-test/results")
    public String loadTestResults(Model model) {
        log.info("üìä –û—Ç–∫—Ä—ã—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è");

        model.addAttribute("pageTitle", "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è - Cleopatra");

        return "diagnostic/load-test-results";
    }

    /**
     * –°—Ç—Ä–∞–Ω–∏—Ü–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–∏—Å—Ç–µ–º—ã
     */
    @GetMapping("/system-monitor")
    public String systemMonitorPage(Model model) {
        model.addAttribute("pageTitle", "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–∏—Å—Ç–µ–º—ã - Cleopatra");
        model.addAttribute("refreshInterval", 5000); // 5 —Å–µ–∫—É–Ω–¥

        return "diagnostic/system-monitor";
    }
}